/** @type {import('next').NextConfig} */
const nextConfig = {
  experimental: {
    webpackBuildWorker: true,
    optimizeCss: true,
    optimizePackageImports: ["lucide-react", "framer-motion"],
    // SAFE ultra-fast additions
    turbo: true,                    // Turbo mode (15-25% faster)
    serverComponentsHmrCache: true, // Server component cache
    optimizeServerReact: true,      // React server optimization
    swcTraceProfiling: false,       // Profile for optimization
  },

  poweredByHeader: false,
  compress: true,
  
  // Enhanced build performance
  generateBuildId: () => 'optimized-build',
  productionBrowserSourceMaps: false,

  onDemandEntries: {
    maxInactiveAge: 15 * 1000,      // Faster cleanup
    pagesBufferLength: 1,           // Less memory
  },
  
  // Enhanced TypeScript compilation
  typescript: {
    ignoreBuildErrors: false,       // Keep safety
  },

  webpack: (config, { dev, isServer }) => {
    // Enhanced filesystem caching
    config.cache = {
      type: "filesystem",
      compression: "gzip",
      maxMemoryGenerations: 0,      // More aggressive
      maxAge: 1000 * 60 * 60 * 24,  // 24 hour cache
    };

    // Optimize for fastest builds
    if (!dev) {
      config.optimization.minimize = true;
      
      // Enhanced module resolution
      config.resolve.symlinks = false;
      config.resolve.cacheWithContext = false;

      // Better chunk splitting for ultra-fast caching
      if (!isServer) {
        config.optimization.splitChunks = {
          chunks: "all",
          minSize: 15000,             // Smaller min size
          maxSize: 200000,            // Smaller max size
          cacheGroups: {
            react: {
              test: /[\\/]node_modules[\\/](react|react-dom)[\\/]/,
              name: "react",
              chunks: "all",
              priority: 30,
              reuseExistingChunk: true,
            },
            firebase: {
              test: /[\\/]node_modules[\\/](firebase|@firebase)[\\/]/,
              name: "firebase",
              chunks: "all",
              priority: 25,
              reuseExistingChunk: true,
            },
            ui: {
              test: /[\\/]node_modules[\\/](@radix-ui|framer-motion|lucide-react)[\\/]/,
              name: "ui-libs",
              chunks: "all",
              priority: 20,
              reuseExistingChunk: true,
            },
            utils: {
              test: /[\\/]node_modules[\\/](lodash|date-fns|uuid)[\\/]/,
              name: "utils",
              chunks: "all",
              priority: 15,
              reuseExistingChunk: true,
            },
            vendor: {
              test: /[\\/]node_modules[\\/]/,
              name: "vendors",
              chunks: "all",
              priority: 10,
              reuseExistingChunk: true,
            },
          },
        };
      }

      // Enhanced tree shaking
      config.optimization.usedExports = true;
      config.optimization.providedExports = true;
      config.optimization.sideEffects = false;
      config.optimization.innerGraph = true;
    }

    // Ultra-fast stats reporting
    config.stats = {
      chunks: false,
      chunkModules: false,
      modules: false,
      assets: false,
      entrypoints: false,
      errorDetails: false,
    };
    
    // Enhanced performance hints
    config.performance = {
      hints: false,
    };

    return config;
  },

  output: "standalone",
  distDir: ".next",
  cleanDistDir: true,
};

module.exports = nextConfig;